= form_tag search_path, method: 'get', role: 'form' do
  = text_field_tag :q, @q, autocomplete: 'off', class: 'form-control'
  = button_tag "", class: 'btn btn-primary' do
    = icon 'search'
    |  Search
- if @results
  h3 #{@results.count} Results

  - if @formula
    h3
      = @formula.to_s { |atom| AtomDecorator.new(atom).linked_name }.html_safe
      |  Spaces

    = render 'application/definitions', list: @results

  - elsif @error
    .alert.alert-notice
      p Could not parse '#{@q}' as a formula (#{@error}). Searching by text.

    = render 'application/definitions', list: @results

- else
  - unless @q.nil?
    h3 No Results
  .examples
    | Try a search like:
    ul
      li= example_search 'Hyperconnected = True'
      li= example_search 'Regular | Lindelof'
      li= example_search 'First Countable + Separable + ~Second Countable'

= onload do
  | new pi_base.FormulaTypeahead('#q', #{Property.pluck(:name).to_json.html_safe}, #{Value.pluck(:name).to_json.html_safe});
